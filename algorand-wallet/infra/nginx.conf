# HTTP Server - Initially for Let's Encrypt verification, then redirects to HTTPS
server {
    listen 80;
    server_name algorand.socialmask.org;
    
    # Root directory
    root /var/www/algorand.socialmask.org;
    index index.html;
    
    # Allow Let's Encrypt verification
    location /.well-known/acme-challenge/ {
        root /var/www/algorand.socialmask.org;
        allow all;
    }
    
    # SPA routing
    location / {
        try_files $uri $uri/ /index.html;
    }
    
    # Logs
    access_log /var/log/nginx/algorand.socialmask.org.access.log;
    error_log /var/log/nginx/algorand.socialmask.org.error.log;
}

# HTTPS Server - Uncomment after SSL certificate is obtained
#server {
#    listen 443 ssl http2;
#    server_name algorand.socialmask.org;
#
#    # SSL Configuration
#    ssl_certificate /etc/letsencrypt/live/algorand.socialmask.org/fullchain.pem;
#    ssl_certificate_key /etc/letsencrypt/live/algorand.socialmask.org/privkey.pem;
#    ssl_protocols TLSv1.2 TLSv1.3;
#    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
#    ssl_prefer_server_ciphers off;
#
#    # Security Headers
#    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
#    add_header X-Frame-Options "SAMEORIGIN" always;
#    add_header X-Content-Type-Options "nosniff" always;
#    add_header X-XSS-Protection "1; mode=block" always;
#    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
#    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https://mainnet-api.algonode.cloud https://mainnet-idx.algonode.cloud; frame-ancestors 'self';" always;
#    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
#
#    # Root directory
#    root /var/www/algorand.socialmask.org;
#    index index.html;
#
#    # Static file caching
#    location ~* \.(js|css|png|jpg|jpeg|gif|svg|ico|woff|woff2|ttf|eot)$ {
#        expires 1y;
#        add_header Cache-Control "public, immutable";
#    }
#
#    # Main location - SPA routing
#    location / {
#        try_files $uri $uri/ /index.html;
#    }
#
#    # Gzip compression
#    gzip on;
#    gzip_vary on;
#    gzip_min_length 1024;
#    gzip_comp_level 6;
#    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json image/svg+xml;
#
#    # Logs
#    access_log /var/log/nginx/algorand.socialmask.org.access.log;
#    error_log /var/log/nginx/algorand.socialmask.org.error.log;
#}
#
## Redirect HTTP to HTTPS (enable after SSL is working)
#server {
#    listen 80;
#    server_name algorand.socialmask.org;
#    return 301 https://$server_name$request_uri;
#}
